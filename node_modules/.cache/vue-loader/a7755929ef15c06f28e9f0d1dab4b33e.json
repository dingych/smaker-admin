{"remainingRequest":"D:\\work\\工作\\个人\\个人项目\\rzl-cloud\\smaker-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\工作\\个人\\个人项目\\rzl-cloud\\smaker-admin\\src\\page\\index\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\工作\\个人\\个人项目\\rzl-cloud\\smaker-admin\\src\\page\\index\\index.vue","mtime":1551667984157},{"path":"D:\\work\\工作\\个人\\个人项目\\rzl-cloud\\smaker-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\工作\\个人\\个人项目\\rzl-cloud\\smaker-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\work\\工作\\个人\\个人项目\\rzl-cloud\\smaker-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\工作\\个人\\个人项目\\rzl-cloud\\smaker-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapGetters} from 'vuex'\nimport tags from './tags'\nimport top from './top/'\nimport sidebar from './sidebar/'\nimport admin from '@/util/admin';\nimport {validatenull} from '@/util/validate';\nimport {calcDate} from '@/util/date.js';\nimport {getStore} from '@/util/store.js';\n\nexport default {\n  components: {\n    top,\n    tags,\n    sidebar\n  },\n  name: 'index',\n  data() {\n    return {\n      //刷新token锁\n      refreshLock: false,\n      //刷新token的时间\n      refreshTime: '',\n    }\n  },\n  created() {\n    //实时检测刷新token\n    this.refreshToken()\n  },\n  destroyed() {\n    console.log(\"销毁\")\n    console.log(this.refreshTime)\n    clearInterval(this.refreshTime)\n  },\n  mounted() {\n    this.init()\n  },\n  computed: mapGetters(['userInfo', 'isLock', 'isCollapse', 'website', 'expires_in']),\n  props: [],\n  methods: {\n    showCollapse() {\n      this.$store.commit(\"SET_COLLAPSE\")\n    },\n    // 屏幕检测\n    init() {\n      this.$store.commit('SET_SCREEN', admin.getScreen())\n      window.onresize = () => {\n        setTimeout(() => {\n          this.$store.commit('SET_SCREEN', admin.getScreen())\n        }, 0);\n      }\n    },\n    // 实时检测刷新token\n    refreshToken() {\n      this.refreshTime = setInterval(() => {\n        const token = getStore({\n          name: 'access_token',\n          debug: true,\n        });\n\n        if (validatenull(token)) {\n          return;\n        }\n\n        if (this.expires_in <= 1000 && !this.refreshLock) {\n          this.refreshLock = true\n          this.$store\n            .dispatch('RefreshToken')\n            .catch(() => {\n              clearInterval(this.refreshTime)\n            });\n          this.refreshLock = false\n        }\n        this.$store.commit(\"SET_EXPIRES_IN\", this.expires_in - 10);\n      }, 10000);\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/page/index","sourcesContent":["<template>\r\n  <div class=\"avue-contail\"\r\n       :class=\"{'avue--collapse':isCollapse}\">\r\n    <div class=\"avue-header\">\r\n      <!-- 顶部导航栏 -->\r\n      <top/>\r\n    </div>\r\n\r\n    <div class=\"avue-layout\">\r\n      <div class=\"avue-left\">\r\n        <!-- 左侧导航栏 -->\r\n        <sidebar/>\r\n      </div>\r\n      <div class=\"avue-main\">\r\n        <!-- 顶部标签卡 -->\r\n        <tags/>\r\n        <!-- 主体视图层 -->\r\n        <el-scrollbar style=\"height:100%\">\r\n          <keep-alive>\r\n            <router-view class=\"avue-view\"\r\n                         v-if=\"$route.meta.$keepAlive\"/>\r\n          </keep-alive>\r\n          <router-view class=\"avue-view\"\r\n                       v-if=\"!$route.meta.$keepAlive\"/>\r\n        </el-scrollbar>\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"avue-shade\"\r\n         @click=\"showCollapse\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {mapGetters} from 'vuex'\r\n  import tags from './tags'\r\n  import top from './top/'\r\n  import sidebar from './sidebar/'\r\n  import admin from '@/util/admin';\r\n  import {validatenull} from '@/util/validate';\r\n  import {calcDate} from '@/util/date.js';\r\n  import {getStore} from '@/util/store.js';\r\n\r\n  export default {\r\n    components: {\r\n      top,\r\n      tags,\r\n      sidebar\r\n    },\r\n    name: 'index',\r\n    data() {\r\n      return {\r\n        //刷新token锁\r\n        refreshLock: false,\r\n        //刷新token的时间\r\n        refreshTime: '',\r\n      }\r\n    },\r\n    created() {\r\n      //实时检测刷新token\r\n      this.refreshToken()\r\n    },\r\n    destroyed() {\r\n      console.log(\"销毁\")\r\n      console.log(this.refreshTime)\r\n      clearInterval(this.refreshTime)\r\n    },\r\n    mounted() {\r\n      this.init()\r\n    },\r\n    computed: mapGetters(['userInfo', 'isLock', 'isCollapse', 'website', 'expires_in']),\r\n    props: [],\r\n    methods: {\r\n      showCollapse() {\r\n        this.$store.commit(\"SET_COLLAPSE\")\r\n      },\r\n      // 屏幕检测\r\n      init() {\r\n        this.$store.commit('SET_SCREEN', admin.getScreen())\r\n        window.onresize = () => {\r\n          setTimeout(() => {\r\n            this.$store.commit('SET_SCREEN', admin.getScreen())\r\n          }, 0);\r\n        }\r\n      },\r\n      // 实时检测刷新token\r\n      refreshToken() {\r\n        this.refreshTime = setInterval(() => {\r\n          const token = getStore({\r\n            name: 'access_token',\r\n            debug: true,\r\n          });\r\n\r\n          if (validatenull(token)) {\r\n            return;\r\n          }\r\n\r\n          if (this.expires_in <= 1000 && !this.refreshLock) {\r\n            this.refreshLock = true\r\n            this.$store\r\n              .dispatch('RefreshToken')\r\n              .catch(() => {\r\n                clearInterval(this.refreshTime)\r\n              });\r\n            this.refreshLock = false\r\n          }\r\n          this.$store.commit(\"SET_EXPIRES_IN\", this.expires_in - 10);\r\n        }, 10000);\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}