{"remainingRequest":"D:\\work\\工作\\文旅\\基础架构\\pig-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\工作\\文旅\\基础架构\\pig-ui\\src\\page\\index\\top\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\工作\\文旅\\基础架构\\pig-ui\\src\\page\\index\\top\\index.vue","mtime":1551667984170},{"path":"D:\\work\\工作\\文旅\\基础架构\\pig-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\工作\\文旅\\基础架构\\pig-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\work\\工作\\文旅\\基础架构\\pig-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\工作\\文旅\\基础架构\\pig-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapGetters, mapState} from \"vuex\";\nimport {fullscreenToggel, listenfullscreen} from \"@/util/util\";\nimport topMenu from \"./top-menu\";\n\nexport default {\n  components: {\n    topMenu\n  },\n  name: \"top\",\n  data() {\n    return {};\n  },\n  filters: {},\n  created() {\n  },\n  mounted() {\n    listenfullscreen(this.setScreen);\n  },\n  computed: {\n    ...mapState({\n      showLock: state => state.common.showLock,\n      showFullScren: state => state.common.showFullScren,\n      showCollapse: state => state.common.showCollapse,\n      showMenu: state => state.common.showMenu,\n    }),\n    ...mapGetters([\n      \"userInfo\",\n      \"isFullScren\",\n      \"tagWel\",\n      \"tagList\",\n      \"isCollapse\",\n      \"tag\",\n      \"logsLen\",\n      \"logsFlag\"\n    ])\n  },\n  methods: {\n    handleScreen() {\n      fullscreenToggel();\n    },\n    setCollapse() {\n      this.$store.commit(\"SET_COLLAPSE\");\n    },\n    setScreen() {\n      this.$store.commit(\"SET_FULLSCREN\");\n    },\n    logout() {\n      this.$confirm(\"是否退出系统, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        this.$store.dispatch(\"LogOut\").then(() => {\n          this.$router.push({path: \"/login\"});\n        });\n      });\n    }\n  }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/page/index/top","sourcesContent":["<template>\r\n  <div class=\"avue-top\">\r\n    <div class=\"top-bar__left\">\r\n      <div class=\"avue-breadcrumb\"\r\n           :class=\"[{ 'avue-breadcrumb--active': isCollapse }]\"\r\n           v-if=\"showCollapse\">\r\n        <i class=\"icon-navicon\"\r\n           @click=\"setCollapse\"></i>\r\n      </div>\r\n    </div>\r\n    <div class=\"top-bar__title\">\r\n      <div class=\"top-bar__item top-bar__item--show\"\r\n           v-if=\"showMenu\">\r\n        <top-menu></top-menu>\r\n      </div>\r\n    </div>\r\n    <div class=\"top-bar__right\">\r\n      <el-tooltip v-if=\"showLock\"\r\n                  effect=\"dark\"\r\n                  content=\"锁屏\"\r\n                  placement=\"bottom\">\r\n      </el-tooltip>\r\n      <el-tooltip v-if=\"showFullScren\"\r\n                  effect=\"dark\"\r\n                  :content=\"isFullScren?'退出全屏':'全屏'\"\r\n                  placement=\"bottom\">\r\n        <div class=\"top-bar__item\">\r\n          <i :class=\"isFullScren?'icon-tuichuquanping':'icon-quanping'\"\r\n             @click=\"handleScreen\"></i>\r\n        </div>\r\n      </el-tooltip>\r\n      <el-dropdown>\r\n        <span class=\"el-dropdown-link\">\r\n          {{userInfo.username}}\r\n          <i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n        </span>\r\n        <el-dropdown-menu slot=\"dropdown\">\r\n          <el-dropdown-item>\r\n            <router-link to=\"/\">首页</router-link>\r\n          </el-dropdown-item>\r\n          <el-dropdown-item>\r\n            <router-link to=\"/info/index\">个人信息</router-link>\r\n          </el-dropdown-item>\r\n          <el-dropdown-item @click.native=\"logout\"\r\n                            divided>退出系统\r\n          </el-dropdown-item>\r\n        </el-dropdown-menu>\r\n      </el-dropdown>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import {mapGetters, mapState} from \"vuex\";\r\n  import {fullscreenToggel, listenfullscreen} from \"@/util/util\";\r\n  import topMenu from \"./top-menu\";\r\n\r\n  export default {\r\n    components: {\r\n      topMenu\r\n    },\r\n    name: \"top\",\r\n    data() {\r\n      return {};\r\n    },\r\n    filters: {},\r\n    created() {\r\n    },\r\n    mounted() {\r\n      listenfullscreen(this.setScreen);\r\n    },\r\n    computed: {\r\n      ...mapState({\r\n        showLock: state => state.common.showLock,\r\n        showFullScren: state => state.common.showFullScren,\r\n        showCollapse: state => state.common.showCollapse,\r\n        showMenu: state => state.common.showMenu,\r\n      }),\r\n      ...mapGetters([\r\n        \"userInfo\",\r\n        \"isFullScren\",\r\n        \"tagWel\",\r\n        \"tagList\",\r\n        \"isCollapse\",\r\n        \"tag\",\r\n        \"logsLen\",\r\n        \"logsFlag\"\r\n      ])\r\n    },\r\n    methods: {\r\n      handleScreen() {\r\n        fullscreenToggel();\r\n      },\r\n      setCollapse() {\r\n        this.$store.commit(\"SET_COLLAPSE\");\r\n      },\r\n      setScreen() {\r\n        this.$store.commit(\"SET_FULLSCREN\");\r\n      },\r\n      logout() {\r\n        this.$confirm(\"是否退出系统, 是否继续?\", \"提示\", {\r\n          confirmButtonText: \"确定\",\r\n          cancelButtonText: \"取消\",\r\n          type: \"warning\"\r\n        }).then(() => {\r\n          this.$store.dispatch(\"LogOut\").then(() => {\r\n            this.$router.push({path: \"/login\"});\r\n          });\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>\r\n"]}]}