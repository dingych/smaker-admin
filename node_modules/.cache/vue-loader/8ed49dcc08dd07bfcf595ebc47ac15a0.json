{"remainingRequest":"D:\\work\\工作\\文旅\\基础架构\\pig-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\工作\\文旅\\基础架构\\pig-ui\\src\\views\\admin\\menu\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\工作\\文旅\\基础架构\\pig-ui\\src\\views\\admin\\menu\\index.vue","mtime":1551667984257},{"path":"D:\\work\\工作\\文旅\\基础架构\\pig-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\工作\\文旅\\基础架构\\pig-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\work\\工作\\文旅\\基础架构\\pig-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\工作\\文旅\\基础架构\\pig-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {addObj, delObj, fetchMenuTree, getObj, putObj} from '@/api/admin/menu'\nimport {mapGetters} from 'vuex'\n\nexport default {\n  name: 'menu',\n  data() {\n    return {\n      list: null,\n      total: null,\n      formEdit: true,\n      formAdd: true,\n      formStatus: '',\n      showElement: false,\n      typeOptions: ['0', '1'],\n      methodOptions: ['GET', 'POST', 'PUT', 'DELETE'],\n      listQuery: {\n        name: undefined\n      },\n      treeData: [],\n      oExpandedKey: {\n        // key (from tree id) : expandedOrNot boolean\n      },\n      oTreeNodeChildren: {\n        // id1 : [children] (from tree node id1)\n        // id2 : [children] (from tree node id2)\n      },\n      aExpandedKeys: [],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      labelPosition: 'right',\n      form: {\n        permission: undefined,\n        name: undefined,\n        menuId: undefined,\n        parentId: undefined,\n        icon: undefined,\n        sort: undefined,\n        component: undefined,\n        type: undefined,\n        path: undefined\n      },\n      currentId: -1,\n      menuManager_btn_add: false,\n      menuManager_btn_edit: false,\n      menuManager_btn_del: false\n    }\n  },\n  filters: {\n    typeFilter(type) {\n      const typeMap = {\n        0: '菜单',\n        1: '按钮'\n      }\n      return typeMap[type]\n    }\n  },\n  created() {\n    this.getList()\n    this.menuManager_btn_add = this.permissions['sys_menu_add']\n    this.menuManager_btn_edit = this.permissions['sys_menu_edit']\n    this.menuManager_btn_del = this.permissions['sys_menu_del']\n  },\n  computed: {\n    ...mapGetters([\n      'elements',\n      'permissions'\n    ])\n  },\n  methods: {\n    getList() {\n      fetchMenuTree(this.listQuery).then(response => {\n        this.treeData = response.data.data\n      })\n    },\n    filterNode(value, data) {\n      if (!value) return true\n      return data.label.indexOf(value) !== -1\n    },\n\n    nodeExpand(data) {\n      let aChildren = data.children\n      if (aChildren.length > 0) {\n        this.oExpandedKey[data.id] = true\n        this.oTreeNodeChildren[data.id] = aChildren\n      }\n      this.setExpandedKeys()\n    },\n    nodeCollapse(data) {\n      this.oExpandedKey[data.id] = false\n      // 如果有子节点\n      this.treeRecursion(this.oTreeNodeChildren[data.id], (oNode) => {\n        this.oExpandedKey[oNode.id] = false\n      });\n      this.setExpandedKeys()\n    },\n    setExpandedKeys() {\n      let oTemp = this.oExpandedKey\n      this.aExpandedKeys = []\n      for (let sKey in oTemp) {\n        if (oTemp[sKey]) {\n          this.aExpandedKeys.push(parseInt(sKey));\n        }\n      }\n    },\n    treeRecursion(aChildren, fnCallback) {\n      if (aChildren) {\n        for (let i = 0; i < aChildren.length; ++i) {\n          let oNode = aChildren[i]\n          fnCallback && fnCallback(oNode)\n          this.treeRecursion(oNode.children, fnCallback)\n        }\n      }\n    },\n\n    getNodeData(data) {\n      if (!this.formEdit) {\n        this.formStatus = 'update'\n      }\n      getObj(data.id).then(response => {\n        this.form = response.data.data\n      })\n      this.currentId = data.id\n      this.showElement = true\n    },\n    handlerEdit() {\n      if (this.form.menuId) {\n        this.formEdit = false\n        this.formStatus = 'update'\n      }\n    },\n    handlerAdd() {\n      this.resetForm()\n      this.formEdit = false\n      this.formStatus = 'create'\n    },\n    handleDelete() {\n      this.$confirm('此操作将永久删除, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        delObj(this.currentId).then(() => {\n          this.getList()\n          this.resetForm()\n          this.onCancel()\n          this.$notify({\n            title: '成功',\n            message: '删除成功',\n            type: 'success',\n            duration: 2000\n          })\n        })\n      })\n    },\n    update() {\n      putObj(this.form).then(() => {\n        this.getList()\n        this.$notify({\n          title: '成功',\n          message: '更新成功',\n          type: 'success',\n          duration: 2000\n        })\n      })\n    },\n    create() {\n      addObj(this.form).then(() => {\n        this.getList()\n        this.$notify({\n          title: '成功',\n          message: '创建成功',\n          type: 'success',\n          duration: 2000\n        })\n      })\n    },\n    onCancel() {\n      this.formEdit = true\n      this.formStatus = ''\n    },\n    resetForm() {\n      this.form = {\n        permission: undefined,\n        name: undefined,\n        menuId: undefined,\n        parentId: this.currentId,\n        icon: undefined,\n        sort: undefined,\n        component: undefined,\n        type: undefined,\n        path: undefined\n      }\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0JA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/admin/menu","sourcesContent":["<!--\r\n  -    Copyright (c) 2018-2025, lengleng All rights reserved.\r\n  -\r\n  - Redistribution and use in source and binary forms, with or without\r\n  - modification, are permitted provided that the following conditions are met:\r\n  -\r\n  - Redistributions of source code must retain the above copyright notice,\r\n  - this list of conditions and the following disclaimer.\r\n  - Redistributions in binary form must reproduce the above copyright\r\n  - notice, this list of conditions and the following disclaimer in the\r\n  - documentation and/or other materials provided with the distribution.\r\n  - Neither the name of the pig4cloud.com developer nor the names of its\r\n  - contributors may be used to endorse or promote products derived from\r\n  - this software without specific prior written permission.\r\n  - Author: lengleng (wangiegie@gmail.com)\r\n  -->\r\n\r\n<template>\r\n  <div class=\"app-container calendar-list-container\">\r\n    <basic-container>\r\n      <div class=\"filter-container\">\r\n        <el-button-group>\r\n          <el-button type=\"primary\"\r\n                     v-if=\"menuManager_btn_add\"\r\n                     icon=\"plus\"\r\n                     @click=\"handlerAdd\">添加\r\n          </el-button>\r\n          <el-button type=\"primary\"\r\n                     v-if=\"menuManager_btn_edit\"\r\n                     icon=\"edit\"\r\n                     @click=\"handlerEdit\">编辑\r\n          </el-button>\r\n          <el-button type=\"primary\"\r\n                     v-if=\"menuManager_btn_del\"\r\n                     icon=\"delete\"\r\n                     @click=\"handleDelete\">删除\r\n          </el-button>\r\n        </el-button-group>\r\n      </div>\r\n\r\n      <el-row>\r\n        <el-col :span=\"8\"\r\n                style='margin-top:15px;'>\r\n          <el-tree class=\"filter-tree\"\r\n                   node-key=\"id\"\r\n                   highlight-current\r\n                   :data=\"treeData\"\r\n                   :default-expanded-keys=\"aExpandedKeys\"\r\n                   :filter-node-method=\"filterNode\"\r\n                   :props=\"defaultProps\"\r\n                   @node-click=\"getNodeData\"\r\n                   @node-expand=\"nodeExpand\"\r\n                   @node-collapse=\"nodeCollapse\">\r\n          </el-tree>\r\n        </el-col>\r\n        <el-col :span=\"16\"\r\n                style='margin-top:15px;'>\r\n          <el-card class=\"box-card\">\r\n            <el-form :label-position=\"labelPosition\"\r\n                     label-width=\"80px\"\r\n                     :model=\"form\"\r\n                     ref=\"form\">\r\n              <el-form-item label=\"父级节点\"\r\n                            prop=\"parentId\">\r\n                <el-input v-model=\"form.parentId\"\r\n                          :disabled=\"true\"\r\n                          placeholder=\"请输入父级节点\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"节点ID\"\r\n                            prop=\"menuId\">\r\n                <el-input v-model=\"form.menuId\"\r\n                          :disabled=\"formEdit || form.menuId\"\r\n                          placeholder=\"请输入节点ID\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"标题\"\r\n                            prop=\"name\">\r\n                <el-input v-model=\"form.name\"\r\n                          :disabled=\"formEdit\"\r\n                          placeholder=\"请输入标题\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"权限标识\"\r\n                            prop=\"permission\">\r\n                <el-input v-model=\"form.permission\"\r\n                          :disabled=\"formEdit\"\r\n                          placeholder=\"请输入权限标识\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"图标\"\r\n                            prop=\"icon\">\r\n                <el-input v-model=\"form.icon\"\r\n                          :disabled=\"formEdit\"\r\n                          placeholder=\"请输入图标\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"类型\"\r\n                            prop=\"type\">\r\n                <el-select class=\"filter-item\"\r\n                           v-model=\"form.type\"\r\n                           :disabled=\"formEdit\"\r\n                           placeholder=\"请输入资源请求类型\">\r\n                  <el-option v-for=\"item in  typeOptions\"\r\n                             :key=\"item\"\r\n                             :label=\"item | typeFilter\"\r\n                             :value=\"item\"></el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"排序\"\r\n                            prop=\"sort\">\r\n                <el-input type=\"number\"\r\n                          v-model=\"form.sort\"\r\n                          :disabled=\"formEdit\"\r\n                          placeholder=\"请输入排序\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"前端组件\"\r\n                            prop=\"component\">\r\n                <el-input v-model=\"form.component\"\r\n                          :disabled=\"formEdit\"\r\n                          placeholder=\"请输入描述\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"前端地址\"\r\n                            prop=\"component\">\r\n                <el-input v-model=\"form.path\"\r\n                          :disabled=\"formEdit\"\r\n                          placeholder=\"iframe嵌套地址\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"路由缓冲\"\r\n                            prop=\"component\">\r\n                <el-switch v-model=\"form.keepAlive\"\r\n                           :disabled=\"formEdit\"\r\n                           active-color=\"#13ce66\"\r\n                           inactive-color=\"#ff4949\"\r\n                           :active-value='\"1\"'\r\n                           :inactive-value='\"0\"'>\r\n                </el-switch>\r\n              </el-form-item>\r\n              <el-form-item v-if=\"formStatus == 'update'\">\r\n                <el-button type=\"primary\"\r\n                           @click=\"update\">更新\r\n                </el-button>\r\n                <el-button @click=\"onCancel\">取消</el-button>\r\n              </el-form-item>\r\n              <el-form-item v-if=\"formStatus == 'create'\">\r\n                <el-button type=\"primary\"\r\n                           @click=\"create\">保存\r\n                </el-button>\r\n                <el-button @click=\"onCancel\">取消</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n          </el-card>\r\n        </el-col>\r\n      </el-row>\r\n    </basic-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {addObj, delObj, fetchMenuTree, getObj, putObj} from '@/api/admin/menu'\r\n  import {mapGetters} from 'vuex'\r\n\r\n  export default {\r\n    name: 'menu',\r\n    data() {\r\n      return {\r\n        list: null,\r\n        total: null,\r\n        formEdit: true,\r\n        formAdd: true,\r\n        formStatus: '',\r\n        showElement: false,\r\n        typeOptions: ['0', '1'],\r\n        methodOptions: ['GET', 'POST', 'PUT', 'DELETE'],\r\n        listQuery: {\r\n          name: undefined\r\n        },\r\n        treeData: [],\r\n        oExpandedKey: {\r\n          // key (from tree id) : expandedOrNot boolean\r\n        },\r\n        oTreeNodeChildren: {\r\n          // id1 : [children] (from tree node id1)\r\n          // id2 : [children] (from tree node id2)\r\n        },\r\n        aExpandedKeys: [],\r\n        defaultProps: {\r\n          children: 'children',\r\n          label: 'name'\r\n        },\r\n        labelPosition: 'right',\r\n        form: {\r\n          permission: undefined,\r\n          name: undefined,\r\n          menuId: undefined,\r\n          parentId: undefined,\r\n          icon: undefined,\r\n          sort: undefined,\r\n          component: undefined,\r\n          type: undefined,\r\n          path: undefined\r\n        },\r\n        currentId: -1,\r\n        menuManager_btn_add: false,\r\n        menuManager_btn_edit: false,\r\n        menuManager_btn_del: false\r\n      }\r\n    },\r\n    filters: {\r\n      typeFilter(type) {\r\n        const typeMap = {\r\n          0: '菜单',\r\n          1: '按钮'\r\n        }\r\n        return typeMap[type]\r\n      }\r\n    },\r\n    created() {\r\n      this.getList()\r\n      this.menuManager_btn_add = this.permissions['sys_menu_add']\r\n      this.menuManager_btn_edit = this.permissions['sys_menu_edit']\r\n      this.menuManager_btn_del = this.permissions['sys_menu_del']\r\n    },\r\n    computed: {\r\n      ...mapGetters([\r\n        'elements',\r\n        'permissions'\r\n      ])\r\n    },\r\n    methods: {\r\n      getList() {\r\n        fetchMenuTree(this.listQuery).then(response => {\r\n          this.treeData = response.data.data\r\n        })\r\n      },\r\n      filterNode(value, data) {\r\n        if (!value) return true\r\n        return data.label.indexOf(value) !== -1\r\n      },\r\n\r\n      nodeExpand(data) {\r\n        let aChildren = data.children\r\n        if (aChildren.length > 0) {\r\n          this.oExpandedKey[data.id] = true\r\n          this.oTreeNodeChildren[data.id] = aChildren\r\n        }\r\n        this.setExpandedKeys()\r\n      },\r\n      nodeCollapse(data) {\r\n        this.oExpandedKey[data.id] = false\r\n        // 如果有子节点\r\n        this.treeRecursion(this.oTreeNodeChildren[data.id], (oNode) => {\r\n          this.oExpandedKey[oNode.id] = false\r\n        });\r\n        this.setExpandedKeys()\r\n      },\r\n      setExpandedKeys() {\r\n        let oTemp = this.oExpandedKey\r\n        this.aExpandedKeys = []\r\n        for (let sKey in oTemp) {\r\n          if (oTemp[sKey]) {\r\n            this.aExpandedKeys.push(parseInt(sKey));\r\n          }\r\n        }\r\n      },\r\n      treeRecursion(aChildren, fnCallback) {\r\n        if (aChildren) {\r\n          for (let i = 0; i < aChildren.length; ++i) {\r\n            let oNode = aChildren[i]\r\n            fnCallback && fnCallback(oNode)\r\n            this.treeRecursion(oNode.children, fnCallback)\r\n          }\r\n        }\r\n      },\r\n\r\n      getNodeData(data) {\r\n        if (!this.formEdit) {\r\n          this.formStatus = 'update'\r\n        }\r\n        getObj(data.id).then(response => {\r\n          this.form = response.data.data\r\n        })\r\n        this.currentId = data.id\r\n        this.showElement = true\r\n      },\r\n      handlerEdit() {\r\n        if (this.form.menuId) {\r\n          this.formEdit = false\r\n          this.formStatus = 'update'\r\n        }\r\n      },\r\n      handlerAdd() {\r\n        this.resetForm()\r\n        this.formEdit = false\r\n        this.formStatus = 'create'\r\n      },\r\n      handleDelete() {\r\n        this.$confirm('此操作将永久删除, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          delObj(this.currentId).then(() => {\r\n            this.getList()\r\n            this.resetForm()\r\n            this.onCancel()\r\n            this.$notify({\r\n              title: '成功',\r\n              message: '删除成功',\r\n              type: 'success',\r\n              duration: 2000\r\n            })\r\n          })\r\n        })\r\n      },\r\n      update() {\r\n        putObj(this.form).then(() => {\r\n          this.getList()\r\n          this.$notify({\r\n            title: '成功',\r\n            message: '更新成功',\r\n            type: 'success',\r\n            duration: 2000\r\n          })\r\n        })\r\n      },\r\n      create() {\r\n        addObj(this.form).then(() => {\r\n          this.getList()\r\n          this.$notify({\r\n            title: '成功',\r\n            message: '创建成功',\r\n            type: 'success',\r\n            duration: 2000\r\n          })\r\n        })\r\n      },\r\n      onCancel() {\r\n        this.formEdit = true\r\n        this.formStatus = ''\r\n      },\r\n      resetForm() {\r\n        this.form = {\r\n          permission: undefined,\r\n          name: undefined,\r\n          menuId: undefined,\r\n          parentId: this.currentId,\r\n          icon: undefined,\r\n          sort: undefined,\r\n          component: undefined,\r\n          type: undefined,\r\n          path: undefined\r\n        }\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n"]}]}