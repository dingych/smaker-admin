{"remainingRequest":"D:\\work\\工作\\个人\\个人项目\\rzl-cloud\\smaker-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\工作\\个人\\个人项目\\rzl-cloud\\smaker-admin\\src\\views\\admin\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\工作\\个人\\个人项目\\rzl-cloud\\smaker-admin\\src\\views\\admin\\role\\index.vue","mtime":1557020397515},{"path":"D:\\work\\工作\\个人\\个人项目\\rzl-cloud\\smaker-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\工作\\个人\\个人项目\\rzl-cloud\\smaker-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\work\\工作\\个人\\个人项目\\rzl-cloud\\smaker-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\工作\\个人\\个人项目\\rzl-cloud\\smaker-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {addObj, delObj, fetchList, fetchRoleTree, getObj, permissionUpd, putObj} from '@/api/admin/role'\nimport {tableOption} from '@/const/crud/admin/role'\nimport {fetchMenuTree} from '@/api/admin/menu'\nimport {mapGetters} from 'vuex'\n\nexport default {\n  name: 'table_role',\n  data() {\n    return {\n      tableOption: tableOption,\n      treeData: [],\n      checkedKeys: [],\n      defaultProps: {\n        label: \"name\",\n        value: 'id'\n      },\n      page: {\n        total: 0, // 总页数\n        currentPage: 1, // 当前页数\n        pageSize: 20 // 每页显示多少条\n      },\n      menuIds: '',\n      list: [],\n      listLoading: true,\n      form: {},\n      roleId: undefined,\n      roleCode: undefined,\n      rolesOptions: undefined,\n      dialogPermissionVisible: false,\n      roleManager_btn_add: false,\n      roleManager_btn_edit: false,\n      roleManager_btn_del: false,\n      roleManager_btn_perm: false\n    }\n  },\n  created() {\n    this.roleManager_btn_add = this.permissions['sys_role_add']\n    this.roleManager_btn_edit = this.permissions['sys_role_edit']\n    this.roleManager_btn_del = this.permissions['sys_role_del']\n    this.roleManager_btn_perm = this.permissions['sys_role_perm']\n  },\n  computed: {\n    ...mapGetters(['elements', 'permissions'])\n  },\n  methods: {\n    getList(page, params) {\n      this.listLoading = true\n      fetchList(Object.assign({\n        current: page.currentPage,\n        size: page.pageSize\n      }, params)).then(response => {\n        this.list = response.data.data.records\n        this.page.total = response.data.data.total\n        this.listLoading = false\n      })\n    },\n    handleRefreshChange() {\n      this.getList(this.page)\n    },\n    handleFilter(param) {\n      this.page.page = 1;\n      this.getList(this.page, param);\n    },\n    handleCreate() {\n      this.$refs.crud.rowAdd();\n    },\n    handleOpenBefore(show, type) {\n      show();\n    },\n    handleUpdate(row, index) {\n      this.$refs.crud.rowEdit(row, index);\n    },\n    handlePermission(row) {\n      fetchRoleTree(row.roleId)\n        .then(response => {\n          this.checkedKeys = response.data\n          return fetchMenuTree()\n        })\n        .then(response => {\n          this.treeData = response.data.data\n          // 解析出所有的太监节点\n          this.checkedKeys = this.resolveAllEunuchNodeId(this.treeData, this.checkedKeys, [])\n          this.dialogStatus = 'permission'\n          this.dialogPermissionVisible = true\n          this.roleId = row.roleId\n          this.roleCode = row.roleCode\n        })\n    },\n    /**\n     * 解析出所有的太监节点id\n     * @param json 待解析的json串\n     * @param idArr 原始节点数组\n     * @param temp 临时存放节点id的数组\n     * @return 太监节点id数组\n     */\n    resolveAllEunuchNodeId(json, idArr, temp) {\n      for (let i = 0; i < json.length; i++) {\n        const item = json[i]\n        // 存在子节点，递归遍历;不存在子节点，将json的id添加到临时数组中\n        if (item.children && item.children.length !== 0) {\n          this.resolveAllEunuchNodeId(item.children, idArr, temp)\n        } else {\n          temp.push(idArr.filter(id => id === item.id))\n        }\n      }\n      return temp\n    },\n    filterNode(value, data) {\n      if (!value) return true\n      return data.label.indexOf(value) !== -1\n    },\n    getNodeData(data, done) {\n      done();\n    },\n    handleDelete(row, index) {\n      var _this = this\n      this.$confirm('是否确认删除名称为\"' + row.roleName + '\"'+ '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        return delObj(row.roleId)\n      }).then(() => {\n        this.getList(this.page)\n        this.list.splice(index, 1);\n        _this.$message({\n          showClose: true,\n          message: '删除成功',\n          type: 'success'\n        })\n      }).catch(function () {\n      })\n    },\n    create(row, done, loading) {\n      addObj(this.form).then(() => {\n        this.getList(this.page)\n        done();\n        this.$notify({\n          title: '成功',\n          message: '创建成功',\n          type: 'success',\n          duration: 2000\n        })\n      }).catch(() => {\n        loading();\n      });\n    },\n    update(row, index, done, loading) {\n      putObj(this.form).then(() => {\n        this.getList(this.page)\n        done();\n        this.$notify({\n          title: '成功',\n          message: '修改成功',\n          type: 'success',\n          duration: 2000\n        })\n      }).catch(() => {\n        loading();\n      });\n    },\n    updatePermession(roleId, roleCode) {\n      this.menuIds = ''\n      this.menuIds = this.$refs.menuTree.getCheckedKeys().join(',').concat(',').concat(this.$refs.menuTree.getHalfCheckedKeys().join(','))\n      permissionUpd(roleId, this.menuIds).then(() => {\n        this.dialogPermissionVisible = false\n        fetchMenuTree()\n          .then(response => {\n            this.form = response.data.data\n            return fetchRoleTree(roleId)\n          })\n          .then(response => {\n            this.checkedKeys = response.data\n            this.$notify({\n              title: '成功',\n              message: '修改成功',\n              type: 'success',\n              duration: 2000\n            })\n          })\n      })\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/admin/role","sourcesContent":["\r\n\r\n<template>\r\n  <div class=\"app-container calendar-list-container\">\r\n    <basic-container>\r\n      <avue-crud :option=\"tableOption\"\r\n                 :data=\"list\"\r\n                 ref=\"crud\"\r\n                 :page=\"page\"\r\n                 v-model=\"form\"\r\n                 :table-loading=\"listLoading\"\r\n                 :before-open=\"handleOpenBefore\"\r\n                 @on-load=\"getList\"\r\n                 @search-change=\"handleFilter\"\r\n                 @refresh-change=\"handleRefreshChange\"\r\n                 @row-update=\"update\"\r\n                 @row-save=\"create\">\r\n\r\n        <template slot=\"menuLeft\">\r\n          <el-button v-if=\"roleManager_btn_add\"\r\n                     class=\"filter-item\"\r\n                     @click=\"handleCreate\"\r\n                     size=\"small\"\r\n                     type=\"primary\"\r\n                     icon=\"el-icon-edit\">添加\r\n          </el-button>\r\n        </template>\r\n\r\n        <template slot=\"menu\"\r\n                  slot-scope=\"scope\">\r\n          <el-button size=\"mini\"\r\n                     type=\"text\"\r\n                     icon=\"el-icon-edit\"\r\n                     v-if=\"roleManager_btn_edit\"\r\n                     @click=\"handleUpdate(scope.row,scope.index)\">编辑\r\n          </el-button>\r\n          <el-button size=\"mini\"\r\n                     type=\"text\"\r\n                     icon=\"el-icon-delete\"\r\n                     v-if=\"roleManager_btn_del\"\r\n                     @click=\"handleDelete(scope.row,scope.index)\">删除\r\n          </el-button>\r\n          <el-button size=\"mini\"\r\n                     type=\"text\"\r\n                     icon=\"el-icon-plus\"\r\n                     plain\r\n                     @click=\"handlePermission(scope.row,scope.index)\"\r\n                     v-if=\"roleManager_btn_perm\">权限\r\n          </el-button>\r\n        </template>\r\n      </avue-crud>\r\n    </basic-container>\r\n    <el-dialog title=\"分配权限\"\r\n               :visible.sync=\"dialogPermissionVisible\">\r\n      <el-tree class=\"filter-tree\"\r\n               :data=\"treeData\"\r\n               :default-checked-keys=\"checkedKeys\"\r\n               :check-strictly=\"false\"\r\n               node-key=\"id\"\r\n               highlight-current\r\n               :props=\"defaultProps\"\r\n               show-checkbox\r\n               ref=\"menuTree\"\r\n               :filter-node-method=\"filterNode\"\r\n               default-expand-all>\r\n      </el-tree>\r\n      <div slot=\"footer\"\r\n           class=\"dialog-footer\">\r\n        <el-button type=\"primary\"\r\n                   @click=\"updatePermession(roleId, roleCode)\">更 新\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {addObj, delObj, fetchList, fetchRoleTree, getObj, permissionUpd, putObj} from '@/api/admin/role'\r\n  import {tableOption} from '@/const/crud/admin/role'\r\n  import {fetchMenuTree} from '@/api/admin/menu'\r\n  import {mapGetters} from 'vuex'\r\n\r\n  export default {\r\n    name: 'table_role',\r\n    data() {\r\n      return {\r\n        tableOption: tableOption,\r\n        treeData: [],\r\n        checkedKeys: [],\r\n        defaultProps: {\r\n          label: \"name\",\r\n          value: 'id'\r\n        },\r\n        page: {\r\n          total: 0, // 总页数\r\n          currentPage: 1, // 当前页数\r\n          pageSize: 20 // 每页显示多少条\r\n        },\r\n        menuIds: '',\r\n        list: [],\r\n        listLoading: true,\r\n        form: {},\r\n        roleId: undefined,\r\n        roleCode: undefined,\r\n        rolesOptions: undefined,\r\n        dialogPermissionVisible: false,\r\n        roleManager_btn_add: false,\r\n        roleManager_btn_edit: false,\r\n        roleManager_btn_del: false,\r\n        roleManager_btn_perm: false\r\n      }\r\n    },\r\n    created() {\r\n      this.roleManager_btn_add = this.permissions['sys_role_add']\r\n      this.roleManager_btn_edit = this.permissions['sys_role_edit']\r\n      this.roleManager_btn_del = this.permissions['sys_role_del']\r\n      this.roleManager_btn_perm = this.permissions['sys_role_perm']\r\n    },\r\n    computed: {\r\n      ...mapGetters(['elements', 'permissions'])\r\n    },\r\n    methods: {\r\n      getList(page, params) {\r\n        this.listLoading = true\r\n        fetchList(Object.assign({\r\n          current: page.currentPage,\r\n          size: page.pageSize\r\n        }, params)).then(response => {\r\n          this.list = response.data.data.records\r\n          this.page.total = response.data.data.total\r\n          this.listLoading = false\r\n        })\r\n      },\r\n      handleRefreshChange() {\r\n        this.getList(this.page)\r\n      },\r\n      handleFilter(param) {\r\n        this.page.page = 1;\r\n        this.getList(this.page, param);\r\n      },\r\n      handleCreate() {\r\n        this.$refs.crud.rowAdd();\r\n      },\r\n      handleOpenBefore(show, type) {\r\n        show();\r\n      },\r\n      handleUpdate(row, index) {\r\n        this.$refs.crud.rowEdit(row, index);\r\n      },\r\n      handlePermission(row) {\r\n        fetchRoleTree(row.roleId)\r\n          .then(response => {\r\n            this.checkedKeys = response.data\r\n            return fetchMenuTree()\r\n          })\r\n          .then(response => {\r\n            this.treeData = response.data.data\r\n            // 解析出所有的太监节点\r\n            this.checkedKeys = this.resolveAllEunuchNodeId(this.treeData, this.checkedKeys, [])\r\n            this.dialogStatus = 'permission'\r\n            this.dialogPermissionVisible = true\r\n            this.roleId = row.roleId\r\n            this.roleCode = row.roleCode\r\n          })\r\n      },\r\n      /**\r\n       * 解析出所有的太监节点id\r\n       * @param json 待解析的json串\r\n       * @param idArr 原始节点数组\r\n       * @param temp 临时存放节点id的数组\r\n       * @return 太监节点id数组\r\n       */\r\n      resolveAllEunuchNodeId(json, idArr, temp) {\r\n        for (let i = 0; i < json.length; i++) {\r\n          const item = json[i]\r\n          // 存在子节点，递归遍历;不存在子节点，将json的id添加到临时数组中\r\n          if (item.children && item.children.length !== 0) {\r\n            this.resolveAllEunuchNodeId(item.children, idArr, temp)\r\n          } else {\r\n            temp.push(idArr.filter(id => id === item.id))\r\n          }\r\n        }\r\n        return temp\r\n      },\r\n      filterNode(value, data) {\r\n        if (!value) return true\r\n        return data.label.indexOf(value) !== -1\r\n      },\r\n      getNodeData(data, done) {\r\n        done();\r\n      },\r\n      handleDelete(row, index) {\r\n        var _this = this\r\n        this.$confirm('是否确认删除名称为\"' + row.roleName + '\"'+ '\"的数据项?', '警告', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(function () {\r\n          return delObj(row.roleId)\r\n        }).then(() => {\r\n          this.getList(this.page)\r\n          this.list.splice(index, 1);\r\n          _this.$message({\r\n            showClose: true,\r\n            message: '删除成功',\r\n            type: 'success'\r\n          })\r\n        }).catch(function () {\r\n        })\r\n      },\r\n      create(row, done, loading) {\r\n        addObj(this.form).then(() => {\r\n          this.getList(this.page)\r\n          done();\r\n          this.$notify({\r\n            title: '成功',\r\n            message: '创建成功',\r\n            type: 'success',\r\n            duration: 2000\r\n          })\r\n        }).catch(() => {\r\n          loading();\r\n        });\r\n      },\r\n      update(row, index, done, loading) {\r\n        putObj(this.form).then(() => {\r\n          this.getList(this.page)\r\n          done();\r\n          this.$notify({\r\n            title: '成功',\r\n            message: '修改成功',\r\n            type: 'success',\r\n            duration: 2000\r\n          })\r\n        }).catch(() => {\r\n          loading();\r\n        });\r\n      },\r\n      updatePermession(roleId, roleCode) {\r\n        this.menuIds = ''\r\n        this.menuIds = this.$refs.menuTree.getCheckedKeys().join(',').concat(',').concat(this.$refs.menuTree.getHalfCheckedKeys().join(','))\r\n        permissionUpd(roleId, this.menuIds).then(() => {\r\n          this.dialogPermissionVisible = false\r\n          fetchMenuTree()\r\n            .then(response => {\r\n              this.form = response.data.data\r\n              return fetchRoleTree(roleId)\r\n            })\r\n            .then(response => {\r\n              this.checkedKeys = response.data\r\n              this.$notify({\r\n                title: '成功',\r\n                message: '修改成功',\r\n                type: 'success',\r\n                duration: 2000\r\n              })\r\n            })\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"]}]}