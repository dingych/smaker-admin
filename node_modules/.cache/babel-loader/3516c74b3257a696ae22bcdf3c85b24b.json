{"remainingRequest":"D:\\work\\工作\\个人\\个人项目\\smaker\\pig-ui\\node_modules\\babel-loader\\lib\\index.js!D:\\work\\工作\\个人\\个人项目\\smaker\\pig-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\work\\工作\\个人\\个人项目\\smaker\\pig-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\work\\工作\\个人\\个人项目\\smaker\\pig-ui\\src\\views\\admin\\role\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\work\\工作\\个人\\个人项目\\smaker\\pig-ui\\src\\views\\admin\\role\\index.vue","mtime":1551667984260},{"path":"D:\\work\\工作\\个人\\个人项目\\smaker\\pig-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\工作\\个人\\个人项目\\smaker\\pig-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\work\\工作\\个人\\个人项目\\smaker\\pig-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\工作\\个人\\个人项目\\smaker\\pig-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Object$assign from \"D:\\\\work\\\\\\u5DE5\\u4F5C\\\\\\u4E2A\\u4EBA\\\\\\u4E2A\\u4EBA\\u9879\\u76EE\\\\smaker\\\\pig-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport _objectSpread from \"D:\\\\work\\\\\\u5DE5\\u4F5C\\\\\\u4E2A\\u4EBA\\\\\\u4E2A\\u4EBA\\u9879\\u76EE\\\\smaker\\\\pig-ui\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { addObj, delObj, fetchList, fetchRoleTree, getObj, permissionUpd, putObj } from '@/api/admin/role';\nimport { tableOption } from '@/const/crud/admin/role';\nimport { fetchMenuTree } from '@/api/admin/menu';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'table_role',\n  data: function data() {\n    return {\n      tableOption: tableOption,\n      treeData: [],\n      checkedKeys: [],\n      defaultProps: {\n        label: \"name\",\n        value: 'id'\n      },\n      page: {\n        total: 0,\n        // 总页数\n        currentPage: 1,\n        // 当前页数\n        pageSize: 20 // 每页显示多少条\n\n      },\n      menuIds: '',\n      list: [],\n      listLoading: true,\n      form: {},\n      roleId: undefined,\n      roleCode: undefined,\n      rolesOptions: undefined,\n      dialogPermissionVisible: false,\n      roleManager_btn_add: false,\n      roleManager_btn_edit: false,\n      roleManager_btn_del: false,\n      roleManager_btn_perm: false\n    };\n  },\n  created: function created() {\n    this.roleManager_btn_add = this.permissions['sys_role_add'];\n    this.roleManager_btn_edit = this.permissions['sys_role_edit'];\n    this.roleManager_btn_del = this.permissions['sys_role_del'];\n    this.roleManager_btn_perm = this.permissions['sys_role_perm'];\n  },\n  computed: _objectSpread({}, mapGetters(['elements', 'permissions'])),\n  methods: {\n    getList: function getList(page, params) {\n      var _this2 = this;\n\n      this.listLoading = true;\n      fetchList(_Object$assign({\n        current: page.currentPage,\n        size: page.pageSize\n      }, params)).then(function (response) {\n        _this2.list = response.data.data.records;\n        _this2.page.total = response.data.data.total;\n        _this2.listLoading = false;\n      });\n    },\n    handleRefreshChange: function handleRefreshChange() {\n      this.getList(this.page);\n    },\n    handleFilter: function handleFilter(param) {\n      this.page.page = 1;\n      this.getList(this.page, param);\n    },\n    handleCreate: function handleCreate() {\n      this.$refs.crud.rowAdd();\n    },\n    handleOpenBefore: function handleOpenBefore(show, type) {\n      show();\n    },\n    handleUpdate: function handleUpdate(row, index) {\n      this.$refs.crud.rowEdit(row, index);\n    },\n    handlePermission: function handlePermission(row) {\n      var _this3 = this;\n\n      fetchRoleTree(row.roleId).then(function (response) {\n        _this3.checkedKeys = response.data;\n        return fetchMenuTree();\n      }).then(function (response) {\n        _this3.treeData = response.data.data; // 解析出所有的太监节点\n\n        _this3.checkedKeys = _this3.resolveAllEunuchNodeId(_this3.treeData, _this3.checkedKeys, []);\n        _this3.dialogStatus = 'permission';\n        _this3.dialogPermissionVisible = true;\n        _this3.roleId = row.roleId;\n        _this3.roleCode = row.roleCode;\n      });\n    },\n\n    /**\n     * 解析出所有的太监节点id\n     * @param json 待解析的json串\n     * @param idArr 原始节点数组\n     * @param temp 临时存放节点id的数组\n     * @return 太监节点id数组\n     */\n    resolveAllEunuchNodeId: function resolveAllEunuchNodeId(json, idArr, temp) {\n      var _this4 = this;\n\n      var _loop = function _loop(i) {\n        var item = json[i]; // 存在子节点，递归遍历;不存在子节点，将json的id添加到临时数组中\n\n        if (item.children && item.children.length !== 0) {\n          _this4.resolveAllEunuchNodeId(item.children, idArr, temp);\n        } else {\n          temp.push(idArr.filter(function (id) {\n            return id === item.id;\n          }));\n        }\n      };\n\n      for (var i = 0; i < json.length; i++) {\n        _loop(i);\n      }\n\n      return temp;\n    },\n    filterNode: function filterNode(value, data) {\n      if (!value) return true;\n      return data.label.indexOf(value) !== -1;\n    },\n    getNodeData: function getNodeData(data, done) {\n      done();\n    },\n    handleDelete: function handleDelete(row, index) {\n      var _this5 = this;\n\n      var _this = this;\n\n      this.$confirm('是否确认删除名称为\"' + row.roleName + '\"' + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        return delObj(row.roleId);\n      }).then(function () {\n        _this5.getList(_this5.page);\n\n        _this5.list.splice(index, 1);\n\n        _this.$message({\n          showClose: true,\n          message: '删除成功',\n          type: 'success'\n        });\n      }).catch(function () {});\n    },\n    create: function create(row, done, loading) {\n      var _this6 = this;\n\n      addObj(this.form).then(function () {\n        _this6.getList(_this6.page);\n\n        done();\n\n        _this6.$notify({\n          title: '成功',\n          message: '创建成功',\n          type: 'success',\n          duration: 2000\n        });\n      }).catch(function () {\n        loading();\n      });\n    },\n    update: function update(row, index, done, loading) {\n      var _this7 = this;\n\n      putObj(this.form).then(function () {\n        _this7.getList(_this7.page);\n\n        done();\n\n        _this7.$notify({\n          title: '成功',\n          message: '修改成功',\n          type: 'success',\n          duration: 2000\n        });\n      }).catch(function () {\n        loading();\n      });\n    },\n    updatePermession: function updatePermession(roleId, roleCode) {\n      var _this8 = this;\n\n      this.menuIds = '';\n      this.menuIds = this.$refs.menuTree.getCheckedKeys().join(',').concat(',').concat(this.$refs.menuTree.getHalfCheckedKeys().join(','));\n      permissionUpd(roleId, this.menuIds).then(function () {\n        _this8.dialogPermissionVisible = false;\n        fetchMenuTree().then(function (response) {\n          _this8.form = response.data.data;\n          return fetchRoleTree(roleId);\n        }).then(function (response) {\n          _this8.checkedKeys = response.data;\n\n          _this8.$notify({\n            title: '成功',\n            message: '修改成功',\n            type: 'success',\n            duration: 2000\n          });\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\r\n  -    Copyright (c) 2018-2025, lengleng All rights reserved.\r\n  -\r\n  - Redistribution and use in source and binary forms, with or without\r\n  - modification, are permitted provided that the following conditions are met:\r\n  -\r\n  - Redistributions of source code must retain the above copyright notice,\r\n  - this list of conditions and the following disclaimer.\r\n  - Redistributions in binary form must reproduce the above copyright\r\n  - notice, this list of conditions and the following disclaimer in the\r\n  - documentation and/or other materials provided with the distribution.\r\n  - Neither the name of the pig4cloud.com developer nor the names of its\r\n  - contributors may be used to endorse or promote products derived from\r\n  - this software without specific prior written permission.\r\n  - Author: lengleng (wangiegie@gmail.com)\r\n  -->\r\n\r\n<template>\r\n  <div class=\"app-container calendar-list-container\">\r\n    <basic-container>\r\n      <avue-crud :option=\"tableOption\"\r\n                 :data=\"list\"\r\n                 ref=\"crud\"\r\n                 :page=\"page\"\r\n                 v-model=\"form\"\r\n                 :table-loading=\"listLoading\"\r\n                 :before-open=\"handleOpenBefore\"\r\n                 @on-load=\"getList\"\r\n                 @search-change=\"handleFilter\"\r\n                 @refresh-change=\"handleRefreshChange\"\r\n                 @row-update=\"update\"\r\n                 @row-save=\"create\">\r\n\r\n        <template slot=\"menuLeft\">\r\n          <el-button v-if=\"roleManager_btn_add\"\r\n                     class=\"filter-item\"\r\n                     @click=\"handleCreate\"\r\n                     size=\"small\"\r\n                     type=\"primary\"\r\n                     icon=\"el-icon-edit\">添加\r\n          </el-button>\r\n        </template>\r\n\r\n        <template slot=\"menu\"\r\n                  slot-scope=\"scope\">\r\n          <el-button size=\"mini\"\r\n                     type=\"text\"\r\n                     icon=\"el-icon-edit\"\r\n                     v-if=\"roleManager_btn_edit\"\r\n                     @click=\"handleUpdate(scope.row,scope.index)\">编辑\r\n          </el-button>\r\n          <el-button size=\"mini\"\r\n                     type=\"text\"\r\n                     icon=\"el-icon-delete\"\r\n                     v-if=\"roleManager_btn_del\"\r\n                     @click=\"handleDelete(scope.row,scope.index)\">删除\r\n          </el-button>\r\n          <el-button size=\"mini\"\r\n                     type=\"text\"\r\n                     icon=\"el-icon-plus\"\r\n                     plain\r\n                     @click=\"handlePermission(scope.row,scope.index)\"\r\n                     v-if=\"roleManager_btn_perm\">权限\r\n          </el-button>\r\n        </template>\r\n      </avue-crud>\r\n    </basic-container>\r\n    <el-dialog title=\"分配权限\"\r\n               :visible.sync=\"dialogPermissionVisible\">\r\n      <el-tree class=\"filter-tree\"\r\n               :data=\"treeData\"\r\n               :default-checked-keys=\"checkedKeys\"\r\n               :check-strictly=\"false\"\r\n               node-key=\"id\"\r\n               highlight-current\r\n               :props=\"defaultProps\"\r\n               show-checkbox\r\n               ref=\"menuTree\"\r\n               :filter-node-method=\"filterNode\"\r\n               default-expand-all>\r\n      </el-tree>\r\n      <div slot=\"footer\"\r\n           class=\"dialog-footer\">\r\n        <el-button type=\"primary\"\r\n                   @click=\"updatePermession(roleId, roleCode)\">更 新\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {addObj, delObj, fetchList, fetchRoleTree, getObj, permissionUpd, putObj} from '@/api/admin/role'\r\n  import {tableOption} from '@/const/crud/admin/role'\r\n  import {fetchMenuTree} from '@/api/admin/menu'\r\n  import {mapGetters} from 'vuex'\r\n\r\n  export default {\r\n    name: 'table_role',\r\n    data() {\r\n      return {\r\n        tableOption: tableOption,\r\n        treeData: [],\r\n        checkedKeys: [],\r\n        defaultProps: {\r\n          label: \"name\",\r\n          value: 'id'\r\n        },\r\n        page: {\r\n          total: 0, // 总页数\r\n          currentPage: 1, // 当前页数\r\n          pageSize: 20 // 每页显示多少条\r\n        },\r\n        menuIds: '',\r\n        list: [],\r\n        listLoading: true,\r\n        form: {},\r\n        roleId: undefined,\r\n        roleCode: undefined,\r\n        rolesOptions: undefined,\r\n        dialogPermissionVisible: false,\r\n        roleManager_btn_add: false,\r\n        roleManager_btn_edit: false,\r\n        roleManager_btn_del: false,\r\n        roleManager_btn_perm: false\r\n      }\r\n    },\r\n    created() {\r\n      this.roleManager_btn_add = this.permissions['sys_role_add']\r\n      this.roleManager_btn_edit = this.permissions['sys_role_edit']\r\n      this.roleManager_btn_del = this.permissions['sys_role_del']\r\n      this.roleManager_btn_perm = this.permissions['sys_role_perm']\r\n    },\r\n    computed: {\r\n      ...mapGetters(['elements', 'permissions'])\r\n    },\r\n    methods: {\r\n      getList(page, params) {\r\n        this.listLoading = true\r\n        fetchList(Object.assign({\r\n          current: page.currentPage,\r\n          size: page.pageSize\r\n        }, params)).then(response => {\r\n          this.list = response.data.data.records\r\n          this.page.total = response.data.data.total\r\n          this.listLoading = false\r\n        })\r\n      },\r\n      handleRefreshChange() {\r\n        this.getList(this.page)\r\n      },\r\n      handleFilter(param) {\r\n        this.page.page = 1;\r\n        this.getList(this.page, param);\r\n      },\r\n      handleCreate() {\r\n        this.$refs.crud.rowAdd();\r\n      },\r\n      handleOpenBefore(show, type) {\r\n        show();\r\n      },\r\n      handleUpdate(row, index) {\r\n        this.$refs.crud.rowEdit(row, index);\r\n      },\r\n      handlePermission(row) {\r\n        fetchRoleTree(row.roleId)\r\n          .then(response => {\r\n            this.checkedKeys = response.data\r\n            return fetchMenuTree()\r\n          })\r\n          .then(response => {\r\n            this.treeData = response.data.data\r\n            // 解析出所有的太监节点\r\n            this.checkedKeys = this.resolveAllEunuchNodeId(this.treeData, this.checkedKeys, [])\r\n            this.dialogStatus = 'permission'\r\n            this.dialogPermissionVisible = true\r\n            this.roleId = row.roleId\r\n            this.roleCode = row.roleCode\r\n          })\r\n      },\r\n      /**\r\n       * 解析出所有的太监节点id\r\n       * @param json 待解析的json串\r\n       * @param idArr 原始节点数组\r\n       * @param temp 临时存放节点id的数组\r\n       * @return 太监节点id数组\r\n       */\r\n      resolveAllEunuchNodeId(json, idArr, temp) {\r\n        for (let i = 0; i < json.length; i++) {\r\n          const item = json[i]\r\n          // 存在子节点，递归遍历;不存在子节点，将json的id添加到临时数组中\r\n          if (item.children && item.children.length !== 0) {\r\n            this.resolveAllEunuchNodeId(item.children, idArr, temp)\r\n          } else {\r\n            temp.push(idArr.filter(id => id === item.id))\r\n          }\r\n        }\r\n        return temp\r\n      },\r\n      filterNode(value, data) {\r\n        if (!value) return true\r\n        return data.label.indexOf(value) !== -1\r\n      },\r\n      getNodeData(data, done) {\r\n        done();\r\n      },\r\n      handleDelete(row, index) {\r\n        var _this = this\r\n        this.$confirm('是否确认删除名称为\"' + row.roleName + '\"'+ '\"的数据项?', '警告', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(function () {\r\n          return delObj(row.roleId)\r\n        }).then(() => {\r\n          this.getList(this.page)\r\n          this.list.splice(index, 1);\r\n          _this.$message({\r\n            showClose: true,\r\n            message: '删除成功',\r\n            type: 'success'\r\n          })\r\n        }).catch(function () {\r\n        })\r\n      },\r\n      create(row, done, loading) {\r\n        addObj(this.form).then(() => {\r\n          this.getList(this.page)\r\n          done();\r\n          this.$notify({\r\n            title: '成功',\r\n            message: '创建成功',\r\n            type: 'success',\r\n            duration: 2000\r\n          })\r\n        }).catch(() => {\r\n          loading();\r\n        });\r\n      },\r\n      update(row, index, done, loading) {\r\n        putObj(this.form).then(() => {\r\n          this.getList(this.page)\r\n          done();\r\n          this.$notify({\r\n            title: '成功',\r\n            message: '修改成功',\r\n            type: 'success',\r\n            duration: 2000\r\n          })\r\n        }).catch(() => {\r\n          loading();\r\n        });\r\n      },\r\n      updatePermession(roleId, roleCode) {\r\n        this.menuIds = ''\r\n        this.menuIds = this.$refs.menuTree.getCheckedKeys().join(',').concat(',').concat(this.$refs.menuTree.getHalfCheckedKeys().join(','))\r\n        permissionUpd(roleId, this.menuIds).then(() => {\r\n          this.dialogPermissionVisible = false\r\n          fetchMenuTree()\r\n            .then(response => {\r\n              this.form = response.data.data\r\n              return fetchRoleTree(roleId)\r\n            })\r\n            .then(response => {\r\n              this.checkedKeys = response.data\r\n              this.$notify({\r\n                title: '成功',\r\n                message: '修改成功',\r\n                type: 'success',\r\n                duration: 2000\r\n              })\r\n            })\r\n        })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/views/admin/role"}]}