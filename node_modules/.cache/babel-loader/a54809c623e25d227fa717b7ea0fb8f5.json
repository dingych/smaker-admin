{"remainingRequest":"D:\\work\\工作\\个人\\个人项目\\smaker\\smaker-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\work\\工作\\个人\\个人项目\\smaker\\smaker-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\work\\工作\\个人\\个人项目\\smaker\\smaker-admin\\src\\util\\validate.js","dependencies":[{"path":"D:\\work\\工作\\个人\\个人项目\\smaker\\smaker-admin\\src\\util\\validate.js","mtime":1551667984241},{"path":"D:\\work\\工作\\个人\\个人项目\\smaker\\smaker-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\work\\工作\\个人\\个人项目\\smaker\\smaker-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\work\\工作\\个人\\个人项目\\smaker\\smaker-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"D:\\\\work\\\\\\u5DE5\\u4F5C\\\\\\u4E2A\\u4EBA\\\\\\u4E2A\\u4EBA\\u9879\\u76EE\\\\smaker\\\\smaker-admin\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/es6.regexp.split\";\n\n/**\r\n * 邮箱\r\n * @param {*} s\r\n */\nexport function isEmail(s) {\n  return /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$/.test(s);\n}\n/**\r\n * 手机号码\r\n * @param {*} s\r\n */\n\nexport function isMobile(s) {\n  return /^1[0-9]{10}$/.test(s);\n}\n/**\r\n * 电话号码\r\n * @param {*} s\r\n */\n\nexport function isPhone(s) {\n  return /^([0-9]{3,4}-)?[0-9]{7,8}$/.test(s);\n}\n/**\r\n * URL地址\r\n * @param {*} s\r\n */\n\nexport function isURL(s) {\n  return /^http[s]?:\\/\\/.*/.test(s);\n}\nexport function isvalidUsername(str) {\n  var valid_map = ['admin', 'editor'];\n  return valid_map.indexOf(str.trim()) >= 0;\n}\n/* 合法uri */\n\nexport function validateURL(textval) {\n  var urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\n  return urlregex.test(textval);\n}\n/* 小写字母 */\n\nexport function validateLowerCase(str) {\n  var reg = /^[a-z]+$/;\n  return reg.test(str);\n}\n/* 大写字母 */\n\nexport function validateUpperCase(str) {\n  var reg = /^[A-Z]+$/;\n  return reg.test(str);\n}\n/* 大小写字母 */\n\nexport function validatAlphabets(str) {\n  var reg = /^[A-Za-z]+$/;\n  return reg.test(str);\n}\n/* 验证pad还是pc */\n\nexport var vaildatePc = function vaildatePc() {\n  var userAgentInfo = navigator.userAgent;\n  var Agents = ['Android', 'iPhone', 'SymbianOS', 'Windows Phone', 'iPad', 'iPod'];\n  var flag = true;\n\n  for (var v = 0; v < Agents.length; v++) {\n    if (userAgentInfo.indexOf(Agents[v]) > 0) {\n      flag = false;\n      break;\n    }\n  }\n\n  return flag;\n};\n/**\r\n * validate email\r\n * @param email\r\n * @returns {boolean}\r\n */\n\nexport function validateEmail(email) {\n  var re = /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n}\n/**\r\n * 判断身份证号码\r\n */\n\nexport function cardid(code) {\n  var list = [];\n  var result = true;\n  var msg = '';\n  var city = {\n    11: '北京',\n    12: '天津',\n    13: '河北',\n    14: '山西',\n    15: '内蒙古',\n    21: '辽宁',\n    22: '吉林',\n    23: '黑龙江 ',\n    31: '上海',\n    32: '江苏',\n    33: '浙江',\n    34: '安徽',\n    35: '福建',\n    36: '江西',\n    37: '山东',\n    41: '河南',\n    42: '湖北 ',\n    43: '湖南',\n    44: '广东',\n    45: '广西',\n    46: '海南',\n    50: '重庆',\n    51: '四川',\n    52: '贵州',\n    53: '云南',\n    54: '西藏 ',\n    61: '陕西',\n    62: '甘肃',\n    63: '青海',\n    64: '宁夏',\n    65: '新疆',\n    71: '台湾',\n    81: '香港',\n    82: '澳门',\n    91: '国外 '\n  };\n\n  if (!validatenull(code)) {\n    if (code.length == 18) {\n      if (!code || !/(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(code)) {\n        msg = '证件号码格式错误';\n      } else if (!city[code.substr(0, 2)]) {\n        msg = '地址编码错误';\n      } else {\n        // 18位身份证需要验证最后一位校验位\n        code = code.split(''); // ∑(ai×Wi)(mod 11)\n        // 加权因子\n\n        var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]; // 校验位\n\n        var parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2, 'x'];\n        var sum = 0;\n        var ai = 0;\n        var wi = 0;\n\n        for (var i = 0; i < 17; i++) {\n          ai = code[i];\n          wi = factor[i];\n          sum += ai * wi;\n        }\n\n        if (parity[sum % 11] != code[17]) {\n          msg = '证件号码校验位错误';\n        } else {\n          result = false;\n        }\n      }\n    } else {\n      msg = '证件号码长度不为18位';\n    }\n  } else {\n    msg = '证件号码不能为空';\n  }\n\n  list.push(result);\n  list.push(msg);\n  return list;\n}\n/**\r\n * 判断手机号码是否正确\r\n */\n\nexport function isvalidatemobile(phone) {\n  var list = [];\n  var result = true;\n  var msg = '';\n  var isPhone = /^0\\d{2,3}-?\\d{7,8}$/; // 增加134 减少|1349[0-9]{7}，增加181,增加145，增加17[678]\n\n  if (!validatenull(phone)) {\n    if (phone.length == 11) {\n      if (isPhone.test(phone)) {\n        msg = '手机号码格式不正确';\n      } else {\n        result = false;\n      }\n    } else {\n      msg = '手机号码长度不为11位';\n    }\n  } else {\n    msg = '手机号码不能为空';\n  }\n\n  list.push(result);\n  list.push(msg);\n  return list;\n}\n/**\r\n * 判断姓名是否正确\r\n */\n\nexport function validatename(name) {\n  var regName = /^[\\u4e00-\\u9fa5]{2,4}$/;\n  if (!regName.test(name)) return false;\n  return true;\n}\n/**\r\n * 判断是否为整数\r\n */\n\nexport function validatenum(num, type) {\n  var regName = /[^\\d.]/g;\n\n  if (type == 1) {\n    if (!regName.test(num)) return false;\n  } else if (type == 2) {\n    regName = /[^\\d]/g;\n    if (!regName.test(num)) return false;\n  }\n\n  return true;\n}\n/**\r\n * 判断是否为小数\r\n */\n\nexport function validatenumord(num, type) {\n  var regName = /[^\\d.]/g;\n\n  if (type == 1) {\n    if (!regName.test(num)) return false;\n  } else if (type == 2) {\n    regName = /[^\\d.]/g;\n    if (!regName.test(num)) return false;\n  }\n\n  return true;\n}\n/**\r\n * 判断是否为空\r\n */\n\nexport function validatenull(val) {\n  if (typeof val === 'boolean') {\n    return false;\n  }\n\n  if (typeof val === 'number') {\n    return false;\n  }\n\n  if (val instanceof Array) {\n    if (val.length == 0) return true;\n  } else if (val instanceof Object) {\n    if (_JSON$stringify(val) === '{}') return true;\n  } else {\n    if (val == 'null' || val == null || val == 'undefined' || val == undefined || val == '') return true;\n    return false;\n  }\n\n  return false;\n}",{"version":3,"sources":["D:\\work\\工作\\个人\\个人项目\\smaker\\smaker-admin\\src\\util\\validate.js"],"names":["isEmail","s","test","isMobile","isPhone","isURL","isvalidUsername","str","valid_map","indexOf","trim","validateURL","textval","urlregex","validateLowerCase","reg","validateUpperCase","validatAlphabets","vaildatePc","userAgentInfo","navigator","userAgent","Agents","flag","v","length","validateEmail","email","re","cardid","code","list","result","msg","city","validatenull","substr","split","factor","parity","sum","ai","wi","i","push","isvalidatemobile","phone","validatename","name","regName","validatenum","num","type","validatenumord","val","Array","Object","undefined"],"mappings":"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","sourcesContent":["/**\r\n * 邮箱\r\n * @param {*} s\r\n */\r\nexport function isEmail (s) {\r\n  return /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$/.test(s)\r\n}\r\n\r\n/**\r\n * 手机号码\r\n * @param {*} s\r\n */\r\nexport function isMobile (s) {\r\n  return /^1[0-9]{10}$/.test(s)\r\n}\r\n\r\n/**\r\n * 电话号码\r\n * @param {*} s\r\n */\r\nexport function isPhone (s) {\r\n  return /^([0-9]{3,4}-)?[0-9]{7,8}$/.test(s)\r\n}\r\n\r\n/**\r\n * URL地址\r\n * @param {*} s\r\n */\r\nexport function isURL (s) {\r\n  return /^http[s]?:\\/\\/.*/.test(s)\r\n}\r\n\r\nexport function isvalidUsername (str) {\r\n  const valid_map = ['admin', 'editor']\r\n  return valid_map.indexOf(str.trim()) >= 0\r\n}\r\n\r\n/* 合法uri */\r\nexport function validateURL (textval) {\r\n  const urlregex = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/\r\n  return urlregex.test(textval)\r\n}\r\n\r\n/* 小写字母 */\r\nexport function validateLowerCase (str) {\r\n  const reg = /^[a-z]+$/\r\n  return reg.test(str)\r\n}\r\n\r\n/* 大写字母 */\r\nexport function validateUpperCase (str) {\r\n  const reg = /^[A-Z]+$/\r\n  return reg.test(str)\r\n}\r\n\r\n/* 大小写字母 */\r\nexport function validatAlphabets (str) {\r\n  const reg = /^[A-Za-z]+$/\r\n  return reg.test(str)\r\n}\r\n\r\n/* 验证pad还是pc */\r\nexport const vaildatePc = function () {\r\n  const userAgentInfo = navigator.userAgent\r\n  const Agents = ['Android', 'iPhone',\r\n    'SymbianOS', 'Windows Phone',\r\n    'iPad', 'iPod'\r\n  ]\r\n  let flag = true\r\n  for (var v = 0; v < Agents.length; v++) {\r\n    if (userAgentInfo.indexOf(Agents[v]) > 0) {\r\n      flag = false\r\n      break\r\n    }\r\n  }\r\n  return flag\r\n}\r\n\r\n/**\r\n * validate email\r\n * @param email\r\n * @returns {boolean}\r\n */\r\nexport function validateEmail (email) {\r\n  const re = /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  return re.test(email)\r\n}\r\n\r\n/**\r\n * 判断身份证号码\r\n */\r\nexport function cardid (code) {\r\n  let list = []\r\n  let result = true\r\n  let msg = ''\r\n  var city = {\r\n    11: '北京',\r\n    12: '天津',\r\n    13: '河北',\r\n    14: '山西',\r\n    15: '内蒙古',\r\n    21: '辽宁',\r\n    22: '吉林',\r\n    23: '黑龙江 ',\r\n    31: '上海',\r\n    32: '江苏',\r\n    33: '浙江',\r\n    34: '安徽',\r\n    35: '福建',\r\n    36: '江西',\r\n    37: '山东',\r\n    41: '河南',\r\n    42: '湖北 ',\r\n    43: '湖南',\r\n    44: '广东',\r\n    45: '广西',\r\n    46: '海南',\r\n    50: '重庆',\r\n    51: '四川',\r\n    52: '贵州',\r\n    53: '云南',\r\n    54: '西藏 ',\r\n    61: '陕西',\r\n    62: '甘肃',\r\n    63: '青海',\r\n    64: '宁夏',\r\n    65: '新疆',\r\n    71: '台湾',\r\n    81: '香港',\r\n    82: '澳门',\r\n    91: '国外 '\r\n  }\r\n  if (!validatenull(code)) {\r\n    if (code.length == 18) {\r\n      if (!code || !/(^\\d{18}$)|(^\\d{17}(\\d|X|x)$)/.test(code)) {\r\n        msg = '证件号码格式错误'\r\n      } else if (!city[code.substr(0, 2)]) {\r\n        msg = '地址编码错误'\r\n      } else {\r\n        // 18位身份证需要验证最后一位校验位\r\n        code = code.split('')\r\n        // ∑(ai×Wi)(mod 11)\r\n        // 加权因子\r\n        var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2]\r\n        // 校验位\r\n        var parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2, 'x']\r\n        var sum = 0\r\n        var ai = 0\r\n        var wi = 0\r\n        for (var i = 0; i < 17; i++) {\r\n          ai = code[i]\r\n          wi = factor[i]\r\n          sum += ai * wi\r\n        }\r\n        if (parity[sum % 11] != code[17]) {\r\n          msg = '证件号码校验位错误'\r\n        } else {\r\n          result = false\r\n        }\r\n      }\r\n    } else {\r\n      msg = '证件号码长度不为18位'\r\n    }\r\n  } else {\r\n    msg = '证件号码不能为空'\r\n  }\r\n  list.push(result)\r\n  list.push(msg)\r\n  return list\r\n}\r\n\r\n/**\r\n * 判断手机号码是否正确\r\n */\r\nexport function isvalidatemobile (phone) {\r\n  let list = []\r\n  let result = true\r\n  let msg = ''\r\n  var isPhone = /^0\\d{2,3}-?\\d{7,8}$/\r\n  // 增加134 减少|1349[0-9]{7}，增加181,增加145，增加17[678]\r\n  if (!validatenull(phone)) {\r\n    if (phone.length == 11) {\r\n      if (isPhone.test(phone)) {\r\n        msg = '手机号码格式不正确'\r\n      } else {\r\n        result = false\r\n      }\r\n    } else {\r\n      msg = '手机号码长度不为11位'\r\n    }\r\n  } else {\r\n    msg = '手机号码不能为空'\r\n  }\r\n  list.push(result)\r\n  list.push(msg)\r\n  return list\r\n}\r\n\r\n/**\r\n * 判断姓名是否正确\r\n */\r\nexport function validatename (name) {\r\n  var regName = /^[\\u4e00-\\u9fa5]{2,4}$/\r\n  if (!regName.test(name)) return false\r\n  return true\r\n}\r\n\r\n/**\r\n * 判断是否为整数\r\n */\r\nexport function validatenum (num, type) {\r\n  let regName = /[^\\d.]/g\r\n  if (type == 1) {\r\n    if (!regName.test(num)) return false\r\n  } else if (type == 2) {\r\n    regName = /[^\\d]/g\r\n    if (!regName.test(num)) return false\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * 判断是否为小数\r\n */\r\nexport function validatenumord (num, type) {\r\n  let regName = /[^\\d.]/g\r\n  if (type == 1) {\r\n    if (!regName.test(num)) return false\r\n  } else if (type == 2) {\r\n    regName = /[^\\d.]/g\r\n    if (!regName.test(num)) return false\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * 判断是否为空\r\n */\r\nexport function validatenull (val) {\r\n  if (typeof val === 'boolean') {\r\n    return false\r\n  }\r\n  if (typeof val === 'number') {\r\n    return false\r\n  }\r\n  if (val instanceof Array) {\r\n    if (val.length == 0) return true\r\n  } else if (val instanceof Object) {\r\n    if (JSON.stringify(val) === '{}') return true\r\n  } else {\r\n    if (val == 'null' || val == null || val == 'undefined' || val == undefined || val == '') return true\r\n    return false\r\n  }\r\n  return false\r\n}\r\n"]}]}